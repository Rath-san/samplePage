(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["faq_search"],{

/***/ "../../src/mvfx_frontend/public/faq_search/faq_search.js":
/*!*******************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/faq_search/faq_search.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.faqSearchInit = faqSearchInit;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _search_field = __webpack_require__(/*! ../shared/search_field/search_field */ \"../../src/mvfx_frontend/public/shared/search_field/search_field.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * FAQ ASYNC SEARCH\n * ================\n * Searches through FAQ questions.\n */\n\n/* istanbul ignore next */\n(0, _jquery2.default)(document).ready(function () {\n    faqSearchInit();\n});\n\nfunction faqSearchInit() {\n    var $faqSearchInput = (0, _jquery2.default)('#faqQuestionSearch  #searchInput');\n    var $faqSearchResultsWrapper = (0, _jquery2.default)('#faqSearchResultsWrapper');\n\n    // Init Search field plugin.\n    (0, _search_field.SearchFieldModule)('#faqQuestionSearch', {\n        searchUrl: '/faq-global-search',\n        maxResults: 3\n    });\n\n    $faqSearchInput.on('focus', function () {\n        return $faqSearchResultsWrapper.addClass('search-msg-present');\n    }); // Moves the input to the top of the search container to make more space for the results.\n\n    // Revert input to start position but only if search input is empty.\n    $faqSearchInput.on('focusout', function (e) {\n        if ((0, _jquery2.default)(e.target).val().length === 0) {\n            $faqSearchResultsWrapper.removeClass('search-msg-present');\n        }\n    });\n\n    // Revert input to start position on input clear.\n    (0, _jquery2.default)('#faqQuestionSearch #searchInputClearBtn').on('click', function () {\n        return $faqSearchResultsWrapper.removeClass('search-msg-present');\n    });\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/faq_search/faq_search.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/faq_search/index.js":
/*!**************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/faq_search/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./faq_search */ \"../../src/mvfx_frontend/public/faq_search/faq_search.js\");\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/faq_search/index.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/shared/search_field/search_field.js":
/*!******************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/shared/search_field/search_field.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SearchFieldModule = SearchFieldModule;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _helper_utils = __webpack_require__(/*! ../../../shared/helper_utils/helper_utils */ \"../../src/mvfx_frontend/shared/helper_utils/helper_utils.js\");\n\nvar _ui_blocker = __webpack_require__(/*! ../ui_blocker/ui_blocker */ \"../../src/mvfx_frontend/public/shared/ui_blocker/ui_blocker.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * ASYNC SEARCH FIELD\n * ==================\n */\n\n/**\n * Async search field init function.\n * @param {string||jquery object} containerEl Element wrapping all elements related to searching. \n * @param {object} userSettings.\n */\n\nfunction SearchFieldModule(containerEl) {\n    var userSettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var $containerEl = (0, _jquery2.default)(containerEl);\n    var currentSearchRequest = void 0;\n    var debouncedSearch = (0, _helper_utils.debounce)(search, 400); // Limit requests to API by debouncing the search function.\n\n    var settings = _jquery2.default.extend({\n        $noResultsMsg: $containerEl.find('.no-results-msg'),\n        $queryTooShortMsg: $containerEl.find('.query-too-short-msg'),\n        $searchBtn: $containerEl.find('.search-btn'),\n        $searchClearBtn: $containerEl.find('.search-clear-btn'),\n        $searchInput: $containerEl.find('.search-input'),\n        $searchLoaderContainer: $containerEl.find('.search-loader'),\n        $searchResults: $containerEl.find('.search-results'),\n        maxResults: null,\n        minQueryLength: 3,\n        resultsRenderer: resultsRenderer, // Determines how the results are rendered.\n        searchUrl: ''\n    }, userSettings);\n\n    // Init UI blocker.\n    var searchLoader = Object.create(_ui_blocker.uiBlocker);\n    searchLoader.init(settings.$searchLoaderContainer, { noOverlay: true });\n\n    settings.$searchInput.on('keyup', function (e) {\n        var inputValue = (0, _jquery2.default)(e.currentTarget).val();\n\n        settings.$searchResults.html('');\n        debouncedSearch(inputValue);\n        toggleInfoMessages(inputValue);\n\n        if (inputValue.length > 0) {\n            settings.$searchBtn.addClass('d-none');\n            settings.$searchClearBtn.removeClass('d-none');\n            settings.$searchInput.addClass('has-value');\n        } else {\n            settings.$searchBtn.removeClass('d-none');\n            settings.$searchClearBtn.addClass('d-none');\n            settings.$searchInput.removeClass('has-value');\n        }\n    });\n\n    settings.$searchClearBtn.on('click', function () {\n        settings.$searchInput.val('').trigger('keyup'); // Trigger input event to hide the clear button, and clear search results.        \n    });\n\n    /**\n     * Renders search results or according search info messages.\n     * @param {array} results Search results returned by API.\n     */\n    function processResults() {\n        var results = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        settings.$searchResults.html('');\n\n        toggleInfoMessages(settings.$searchInput.val(), results);\n\n        if (results.length === 0) {\n            return;\n        }\n\n        settings.resultsRenderer(results);\n    }\n\n    /**\n     * Search results renderer.\n     * @param {array} results Search results returned by API.\n     */\n    function resultsRenderer(results) {\n        var $results = (0, _jquery2.default)('<ul></ul>');\n\n        if (settings.maxResults) {\n            results = results.slice(0, settings.maxResults);\n        }\n\n        (0, _jquery2.default)(results).each(function (index, result) {\n            $results.append('\\n                <li>\\n                    <a href=\"' + result.url + '\">\\n                        ' + result.category + '\\n                        <span>' + result.count + ' <span class=\"result-label\">' + result.result_suffix + '</span></span>\\n                    </a>\\n                </li>\\n            ');\n        });\n\n        settings.$searchResults.append($results);\n    }\n\n    /**\n     * Search request to API.\n     * @param {string} inputValue.\n     */\n    function search(inputValue) {\n        var startLoader = true; // Should the loader be displayed - loader is unnecessary when search request times are shorter than 200ms.\n\n        // Clear results without starting the search.\n        if (inputValue.length < settings.minQueryLength) {\n            processResults();\n            return;\n        }\n\n        // Cancel already ongoing search request.\n        if (currentSearchRequest && currentSearchRequest.abort) {\n            currentSearchRequest.abort();\n        }\n\n        setTimeout(function () {\n            return startLoader ? searchLoader.start() : undefined;\n        }, 200); // Delay searchLoader a bit to avoid flashing on too short search requests.\n\n        currentSearchRequest = _jquery2.default.get(settings.searchUrl, { q: inputValue }).done(function (response) {\n            return processResults(response.result);\n        }).always(function () {\n            startLoader = false; // Request has finished, searchLoader is not needed if it was not displayed yet.\n            searchLoader.stop(0);\n        });\n\n        return currentSearchRequest;\n    }\n\n    /**\n     * Show messages depending on search query and results lengths.\n     * @param {string} query Search query.\n     * @param {array} results \n     */\n    function toggleInfoMessages(query, results) {\n        settings.$noResultsMsg.addClass('d-none');\n\n        if (query.length < settings.minQueryLength && query.length > 0) {\n            settings.$queryTooShortMsg.removeClass('d-none');\n            settings.$searchResults.html('');\n        } else {\n            settings.$queryTooShortMsg.addClass('d-none');\n        }\n\n        if (results && results.length === 0 && query.length >= settings.minQueryLength) {\n            settings.$queryTooShortMsg.addClass('d-none');\n            settings.$noResultsMsg.removeClass('d-none');\n        }\n    }\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/shared/search_field/search_field.js?");

/***/ })

},[["../../src/mvfx_frontend/public/faq_search/index.js","runtime","commons"]]]);