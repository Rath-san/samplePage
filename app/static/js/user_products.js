(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["user_products"],{

/***/ "../../src/mvfx_frontend/public/product_list/active_filters.js":
/*!*************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/product_list/active_filters.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ActiveFilters = ActiveFilters;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _helper_utils = __webpack_require__(/*! ../../shared/helper_utils/helper_utils */ \"../../src/mvfx_frontend/shared/helper_utils/helper_utils.js\");\n\nvar _carousel_toggler = __webpack_require__(/*! ./carousel_toggler */ \"../../src/mvfx_frontend/public/product_list/carousel_toggler.js\");\n\nvar _seconds_to_minutes = __webpack_require__(/*! ./seconds_to_minutes */ \"../../src/mvfx_frontend/public/product_list/seconds_to_minutes.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * ACTIVE FILTERS\n * ==============\n * Handles rendering, removing and resizing currently selected product list filters.\n */\n\n/**\n * Module init function.\n * @param {function} activeFiltersUpdatedCallback Called when filter or filters are removed.\n */\nfunction ActiveFilters(activeFiltersUpdatedCallback) {\n    var $activeFilters = (0, _jquery2.default)('#activeFilters');\n    var $activeFiltersWrapper = (0, _jquery2.default)('#activeFiltersWrapper');\n    var $clearAllFiltersBtn = (0, _jquery2.default)('#clearAllFiltersBtn');\n    var $productListContainer = (0, _jquery2.default)('#productListContainer');\n    var activeFilterFields = []; // An array of names and values of currently selected filter form elements.\n    var debounceFilterResize = (0, _helper_utils.debounce)(filterResize, 200);\n\n    (0, _jquery2.default)(window).on('resize', function () {\n        return debounceFilterResize();\n    }); // Resize active filters on window dimensions change.\n\n    $activeFiltersWrapper.on('click', '[data-filter-remove]', function (e) {\n        return onFilterRemove(e.currentTarget);\n    }); // Individual filter remove handler.\n\n    $activeFiltersWrapper.on('click', '#clearAllFiltersBtn', function () {\n        dismissActiveFilters(); // Clear out all filters.\n\n        activeFiltersUpdatedCallback(activeFilterFields); // Inform that filters have been removed.\n    });\n\n    // Expose public functions.\n    return {\n        renderActiveFilters: renderActiveFilters\n    };\n\n    /**\n     * Removes field from activeFilterFields array.\n     * @param {Object||Array} removedField.\n     * @param {String} removedField.name.\n     * @param {String} removedField.value.\n     */\n    function activeFilterFieldRemove(removedField) {\n\n        // Check if there are multiple fields.\n        if (_jquery2.default.isArray(removedField)) {\n            _jquery2.default.each(removedField, function (index, field) {\n                activeFilterFields = activeFilterFields.filter(function (activeField) {\n                    return activeField.name !== field.name || activeField.value !== field.value;\n                }); // Filter out matched form field.\n            });\n        } else {\n            activeFilterFields = activeFilterFields.filter(function (activeField) {\n                return activeField.name !== removedField.name || activeField.value !== removedField.value;\n            }); // Filter out matched form field.\n        }\n    }\n\n    /**\n     * Adjusts the height of active filters container, and recalculates product list translateY position.\n     */\n    function filterResize() {\n        if (!$productListContainer.hasClass('filters-active')) {\n            return;\n        } // Check if filters are visible.\n\n        $activeFiltersWrapper[0].style.height = $activeFilters[0].scrollHeight + 'px'; // Check how much height is needed via scrollHeight and set it as height.\n        (0, _carousel_toggler.hideCarousel)(); // Recalculate product list position.\n    }\n\n    /**\n     * Clears all current filters, hides filters container and shows carousel.\n     */\n    function dismissActiveFilters() {\n        $productListContainer.removeClass('filters-active');\n        (0, _carousel_toggler.showCarousel)(); // Carousel shows only if the filters are not active.\n\n        $activeFilters.find('[data-filter-remove]') // Get filter data of all rendered active filters.\n        .each(function (index, filter) {\n            return activeFilterFieldRemove((0, _jquery2.default)(filter).data('filterRemove'));\n        }); // Remove the filter.\n\n        $activeFilters.html(''); // Clear old filters.\n        $activeFiltersWrapper[0].style.height = '0px'; // Animate hide action by setting active filters height to 0.\n        $clearAllFiltersBtn.addClass('d-none'); // Hide clear all button.        \n    }\n\n    /**\n     * Handles event when filter is removed via X button click.\n     * @param {Object} removeBtn Clicked DOM element.\n     */\n    function onFilterRemove(removeBtn) {\n        activeFilterFieldRemove((0, _jquery2.default)(removeBtn).data('filterRemove')); // Remove the filter.\n        renderActiveFilters(activeFilterFields); // Rerender updated active filters.\n        activeFiltersUpdatedCallback(activeFilterFields); // Inform that filter has been removed.        \n    }\n\n    /**\n     * Renders currently selected filters based on filter form data.\n     * @param {Object[]} filterFields - array of names and values of filter form elements.\n     * @param {String} filterFields[].name - Form field name.\n     * @param {String} filterFields[].value - Form field value.\n     */\n    function renderActiveFilters(filterFields) {\n        var $newFiltersTemp = (0, _jquery2.default)('<div></div>'); // Container for new filters. Wrapped in divs for easier html searching.    \n        var filterRemoveIconTemp = '<img src=\"/static/svg/close.svg\"/>';\n\n        activeFilterFields = filterFields; // Assign new filters as active.\n\n        _jquery2.default.each(filterFields, function (index, field) {\n\n            var filterLabel = (0, _jquery2.default)('[name=\"' + field.name + '\"][value=\"' + field.value + '\"]').data('filterLabel'); // Fetch the label by which the filter will be represented in the container.\n\n            // Render special color filter in a group.\n            if (field.name === 'color') {\n                var backgroundColor = ''; // Hash value by which the color will be represented.\n                var colorClass = 'color-custom'; // Default color filter class.\n\n                if ($newFiltersTemp.find('#activeColorFilters').length === 0) {\n                    // Create a grouping wrapper for colors if not already present.                    \n                    $newFiltersTemp.append('<span class=\"d-flex\" id=\"activeColorFilters\">\\n                            ' + (0, _jquery2.default)('#colorFiltersLabel').text() + ':\\n                        </span>');\n                }\n\n                // Check the type of the color filter and assign it a class or background color.\n                // White and transparent colors must have special classes, and do not have background colors.\n                if (filterLabel === 'white') {\n                    colorClass = 'color-white';\n                } else if (filterLabel === 'alpha') {\n                    colorClass = 'color-transparent';\n                } else {\n                    // Set color filter background color by pulling the color hash from filter form.\n                    backgroundColor = (0, _jquery2.default)('[name=\"color\"][value=\"' + field.value + '\"]').parent().find('.color-custom').css('background-color');\n                }\n\n                // Add the color filter to the grouping wrapper.\n                $newFiltersTemp.find('#activeColorFilters').append('                    \\n                    <i class=\"' + colorClass + '\" style=\"background-color: ' + backgroundColor + '\"></i>\\n                    <span data-filter-remove=\\'{ \"name\": \"color\", \"value\": \"' + field.value + '\" }\\'>' + filterRemoveIconTemp + '</span>\\n                ');\n            } else if (field.name === 'category' || field.name === 'resolution' || field.name === 'software') {\n                // Append simple checkbox filter types.\n                $newFiltersTemp.append('\\n                    <span>\\n                        ' + filterLabel + '\\n                        <span data-filter-remove=\\'{ \"name\": \"' + field.name + '\", \"value\": \"' + field.value + '\" }\\'>' + filterRemoveIconTemp + '</span>\\n                    </span>\\n                ');\n            } else if (field.name === 'modular_template' || field.name === 'pre_keyed') {\n                // Append boolean types of filters.\n                $newFiltersTemp.append('\\n                    <span>\\n                        ' + filterLabel + ': ' + (field.value === 'true' ? 'yes' : 'no') + '\\n                        <span data-filter-remove=\\'{ \"name\": \"' + field.name + '\", \"value\": \"' + field.value + '\" }\\'>' + filterRemoveIconTemp + '</span>\\n                    </span>\\n                ');\n            }\n        });\n\n        // Check and assign dropzone field values.\n        var dropzonesFrom = filterFields.find(function (field) {\n            return field.name === 'dropzones_from';\n        });\n        var dropzonesTo = filterFields.find(function (field) {\n            return field.name === 'dropzones_to';\n        });\n\n        if (dropzonesFrom && dropzonesTo) {\n            // Append drop zone filter.\n            $newFiltersTemp.append('\\n                <span>\\n                    drop zones: ' + parseInt(dropzonesFrom.value) + ' - ' + parseInt(dropzonesTo.value) + '\\n                    <span data-filter-remove=\\'[{ \"name\": \"dropzones_from\", \"value\": \"' + dropzonesFrom.value + '\" }, { \"name\": \"dropzones_to\", \"value\": \"' + dropzonesTo.value + '\" }]\\'>\\n                        ' + filterRemoveIconTemp + '\\n                    </span>\\n                </span>\\n            ');\n        }\n\n        // Check and assign project duration field values.\n        var durationFrom = filterFields.find(function (field) {\n            return field.name === 'duration_from';\n        });\n        var durationTo = filterFields.find(function (field) {\n            return field.name === 'duration_to';\n        });\n\n        if (durationFrom && durationTo) {\n            // Append project duration filter.\n            $newFiltersTemp.append('\\n                <span>\\n                    ' + (0, _jquery2.default)('#durationFilterLabel').text() + ': ' + (0, _seconds_to_minutes.secondsToMinutes)(durationFrom.value) + ' - ' + (0, _seconds_to_minutes.secondsToMinutes)(durationTo.value) + '\\n                    <span data-filter-remove=\\'[{ \"name\": \"duration_from\", \"value\": \"' + durationFrom.value + '\" }, { \"name\": \"duration_to\", \"value\": \"' + durationTo.value + '\" }]\\'>\\n                        ' + filterRemoveIconTemp + '\\n                    </span>\\n                </span>\\n            ');\n        }\n\n        // Check if any of the filters were added.\n        if ($newFiltersTemp.children().length > 0) {\n            $newFiltersTemp.append('<button id=\"clearAllFiltersBtn\" class=\"dismiss-btn d-none\" type=\"button\"><img src=\"/static/svg/close.svg\"></button>'); // Add clear all button.\n            $activeFilters.html(''); // Clear old filters.\n            $activeFilters.html($newFiltersTemp.html()); // Add new filters.\n            $clearAllFiltersBtn = (0, _jquery2.default)('#clearAllFiltersBtn'); // Assign newly added clear all button.\n\n            // Show the clear all button.\n            if ($activeFiltersWrapper.height() === 0) {\n                // If there are no filters visible yet, wait for filter show animation to finish before showing the clear all btn.\n                $activeFiltersWrapper.on('transitionend', function filtersTransEnd() {\n                    $activeFiltersWrapper.off('transitionend', filtersTransEnd); // Unregister the event handler.\n\n                    $clearAllFiltersBtn.removeClass('d-none');\n                });\n            } else {\n                $clearAllFiltersBtn.removeClass('d-none'); // The filters are already visible no need to wait for animations to finish.\n            }\n\n            // Show the active filters wrapper by assigning it the scroll height of the rendered filters to trigger the animations.\n            $activeFiltersWrapper[0].style.height = $activeFilters[0].scrollHeight + 'px';\n            $productListContainer.addClass('filters-active');\n\n            (0, _carousel_toggler.hideCarousel)(); // Hide the carousel, or recalculate product list position if already hidden.\n        } else if ($productListContainer.hasClass('filters-active')) {\n            dismissActiveFilters(); // No new active filters detected but old filters are still present, dismiss the filter container.\n        }\n    }\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/product_list/active_filters.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/product_list/carousel_toggler.js":
/*!***************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/product_list/carousel_toggler.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.hideCarousel = hideCarousel;\nexports.showCarousel = showCarousel;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar $productListContainer = void 0;\nvar $productListWrapper = void 0;\n\n(0, _jquery2.default)(document).ready(function () {\n    $productListContainer = (0, _jquery2.default)('#productListContainer');\n    $productListWrapper = (0, _jquery2.default)('.product-list-wrapper');\n\n    $productListContainer.on('transitionend', function () {\n        // Hide carousel after the product list reposition has finished.\n        if ($productListContainer.hasClass('filters-active')) {\n            $productListWrapper.addClass('hide-carousel');\n        }\n    });\n});\n\n/**\n * Hides carousel by covering it with product list container, which allows for performant animations.\n * Can be called multiple times to recalculate the product list position if needed.\n */\nfunction hideCarousel() {\n    // Get height directly from styles as filter height change is animated and checking current rendered height during animation will result in errorous values \n    // (ex. the rendered height is 0 when filters start to expand on filter show).\n    var activeFiltersHeight = parseInt((0, _jquery2.default)('#activeFiltersWrapper')[0].style.height, 10);\n    var carouselHeight = (0, _jquery2.default)('.product-list-carousel').outerHeight();\n    var offset = void 0;\n\n    if (carouselHeight > 0) {\n        offset = 'translateY(-' + (carouselHeight - activeFiltersHeight) + 'px)';\n    } else {\n        offset = 'translateY(' + activeFiltersHeight + 'px)';\n    }\n\n    $productListContainer.css('transform', offset);\n}\n\nfunction showCarousel() {\n    if ((0, _jquery2.default)('#productListContainer').hasClass('filters-active')) {\n        return;\n    } // Do not show carousel when filters are active.\n\n    $productListWrapper.removeClass('hide-carousel');\n\n    $productListContainer.css('transform', ''); // Return the list to initial position.\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/product_list/carousel_toggler.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/product_list/seconds_to_minutes.js":
/*!*****************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/product_list/seconds_to_minutes.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.secondsToMinutes = secondsToMinutes;\n/**\n * SECONDS TO MINUTES CONVERTER\n * ============================\n */\n\n/**\n * Seconds to minutes converter.\n * @param {integer} seconds \n * @returns {string} minutes in string format ex. 13:37.\n */\nfunction secondsToMinutes(seconds) {\n  return (seconds - (seconds %= 60)) / 60 + (9 < seconds ? ':' : ':0') + seconds;\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/product_list/seconds_to_minutes.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/user_products/index.js":
/*!*****************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/user_products/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./user_products */ \"../../src/mvfx_frontend/public/user_products/user_products.js\");\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/user_products/index.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/user_products/product_download.js":
/*!****************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/user_products/product_download.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProductDownload = ProductDownload;\n/**\n * PRODUCT DOWNLOAD\n * ================\n * Manages modals with download links to the selected product.\n */\n\nfunction ProductDownload() {\n    var $mInstallerModal = $('#mInstallerModal');\n    var selectedProduct = void 0;\n\n    $(document).on('click', '[data-product-download]', function (e) {\n        return onProductSelect($(e.target).data('productDownload'));\n    }); // Product select event handler.\n\n    // Manual download choice select in mInstallerModal event handler.\n    $(document).on('click', '#manualDownloadBtn', function () {\n        $mInstallerModal.modal('hide');\n        displayLinks(); // Open modal with product download links.\n    });\n\n    /**\n     * Fetches product download links and renders them in a modal.\n     */\n    function displayLinks() {\n\n        $.get('/user/product/' + selectedProduct.productId + '/sources').done(function (links) {\n            var listHtml = '';\n\n            $('.link-list').html(''); // Clear up old links.\n            $('#downloadLinksModalTitle').text(selectedProduct.productTitle); // Set product name as a modal title.\n\n            // In case of one link, automatically start downloading the file.\n            if (links.length === 1) {\n                window.location = links[0].url;\n                return;\n            }\n\n            $('.resource-count').text(links.length); // Number of packages.\n\n            // Render file parts and their info.\n            $.each(links, function (index, link) {\n                listHtml += ' \\n                        <div class=\"row\">                                                   \\n                            <div class=\"col\">' + (index + 1) + '. ' + link.title + '</div>\\n                            <div class=\"col-auto text-right size\">' + link.size + '</div>\\n                            <div class=\"col-auto text-right download\"><a href=\"' + link.url + '\" download></a></div>                        \\n                        </div>\\n                    ';\n            });\n\n            $('.link-list').append(listHtml);\n            $('#downloadLinksModal').modal('show'); // Open the modal with download links.\n        });\n    }\n\n    /**\n     * Determines which modal should be opened on product select.\n     * @param {Object} productData \n     * @param {String} productData.productId\n     * @param {String} productData.productTitle\n     */\n    function onProductSelect(productData) {\n        selectedProduct = productData;\n\n        // Mac users have the option to download the product via mInstaller.\n        if (navigator.platform.indexOf('Mac') > -1) {\n            $mInstallerModal.modal('show');\n        } else {\n            displayLinks(selectedProduct); // Immediately display product download links.\n        }\n    }\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\")))\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/user_products/product_download.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/user_products/product_filtering.js":
/*!*****************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/user_products/product_filtering.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ProductFiltering = ProductFiltering;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _active_filters = __webpack_require__(/*! ../product_list/active_filters */ \"../../src/mvfx_frontend/public/product_list/active_filters.js\");\n\nvar _helper_utils = __webpack_require__(/*! ../../shared/helper_utils/helper_utils */ \"../../src/mvfx_frontend/shared/helper_utils/helper_utils.js\");\n\nvar _infinite_scroll = __webpack_require__(/*! ../shared/infinite_scroll/infinite_scroll */ \"../../src/mvfx_frontend/public/shared/infinite_scroll/infinite_scroll.js\");\n\nvar _infinite_scroll_bootstrap_fix = __webpack_require__(/*! ../shared/infinite_scroll_bootstrap_fix/infinite_scroll_bootstrap_fix */ \"../../src/mvfx_frontend/public/shared/infinite_scroll_bootstrap_fix/infinite_scroll_bootstrap_fix.js\");\n\nvar _ui_blocker = __webpack_require__(/*! ../shared/ui_blocker/ui_blocker */ \"../../src/mvfx_frontend/public/shared/ui_blocker/ui_blocker.js\");\n\nvar _search_shrink = __webpack_require__(/*! ./search_shrink */ \"../../src/mvfx_frontend/public/user_products/search_shrink.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * PRODUCT LIST FILTERING\n * ======================\n * Handles searching by selected filters and rendering the results into product list container. It also initializes the product list infinite scroll.\n */\n\nfunction ProductFiltering() {\n    var $filterForm = (0, _jquery2.default)('#filterForm');\n    var $productsContainer = (0, _jquery2.default)('#productsContainer');\n    var $searchInput = (0, _jquery2.default)('#filtersSearchInput');\n    var $searchInputClearBtn = (0, _jquery2.default)('#filtersSearchInputClearBtn');\n    var $searchInputContainer = (0, _jquery2.default)('#filtersSearchInputContainer');\n    var blockerInstance = void 0; // UI blocker instance.\n    var currentSearchRequest = void 0; // Search request currently in progress.\n    var debouncedSearch = (0, _helper_utils.debounce)(search, 400);\n    var infiniteScrollInstance = void 0;\n\n    $searchInput.on('keyup', function () {\n        return onSearchFieldInput();\n    }); // Search field input event handler.\n\n    $searchInputClearBtn.on('click', function () {\n        return onSearchFieldClear();\n    }); // Search field input clear btn event handler.\n\n    // Init UI blocker for product list, blocks product list every time the filtering is started.\n    blockerInstance = Object.create(_ui_blocker.uiBlocker);\n    blockerInstance.init((0, _jquery2.default)('#productListContainer'), { noOverlay: true });\n\n    // Init infinite scroll.\n    infiniteScrollInstance = (0, _infinite_scroll.InfiniteScroll)({ container: '.product-list-infinite-scroll', pageFetchedCallback: onPageFetched, pageRenderedCallback: onPageRendered });\n\n    (0, _search_shrink.SearchShrink)(); // Init shrinking search input on window scroll.\n\n    /**\n     * Callback function that updates filter form so that selected filters match the ones in the active filters container.\n     * Called each time and active filter/filters are removed.\n     * @param {Object[]} activeFormFields - form fields that should not be cleared.\n     * @param {String} activeFormFields.name.\n     * @param {String} activeFormFields.value.\n     */\n    function activeFiltersUpdatedCallback(activeFormFields) {\n\n        // Loop through each field in filter form and clear out those that are not active.\n        $filterForm.find(':input').each(function (index, field) {\n            // Search field should not be cleared.\n            if (field.name === 'q') {\n                return;\n            }\n        });\n\n        debouncedSearch(); // Start the search with updated filter form.\n    }\n\n    /**\n     * Serializes selected filter form elements into array of names and values.\n     * @returns {Array.<{name: String, value: String}>} fields - serialized filter form fields.\n     */\n    function getSerializedFilterFields() {\n        var fields = $filterForm.serializeArray();\n        fields = fields.filter(function (field) {\n            return field.value !== '';\n        }); // Purge inputs with empty values.\n\n        return fields;\n    }\n\n    /**\n     * Used as an event handler for window.scroll event that scrolls to the top of the page on each window scroll.\n     */\n    function noScroll() {\n        window.scrollTo(0, 0);\n    }\n\n    /**\n     * Filter search input clear button click event handler.\n     */\n    function onSearchFieldClear() {\n        $searchInput.val('');\n        $searchInputClearBtn.addClass('d-none');\n\n        search();\n    }\n\n    /**\n     * Filter search field value input event handler.\n     */\n    function onSearchFieldInput() {\n        var queryLength = $searchInput.val().length;\n\n        // Toggle input clear button visibillity.\n        if (queryLength > 0) {\n            $searchInputClearBtn.removeClass('d-none');\n        } else {\n            $searchInputClearBtn.addClass('d-none');\n        }\n\n        if (queryLength < 2 && queryLength !== 0) {\n            return;\n        } // Start searching after inputing at least 2 characters.\n\n        debouncedSearch();\n    }\n\n    /**\n     * Infinite scroll callback for when page was fetched from API but not yet rendered.\n     * @param {Object} $page - fetched page html wrapped in jQuery.\n     */\n    function onPageFetched($page) {\n        // Do a series of actions when the first page is lazy loaded.\n        if ($page.closest('[data-page-number]').data('pageNumber') === 1) {\n            (0, _jquery2.default)('#backToTopBtn').data('pageReload', false); // Inform back to top button that full page reload is not needed.\n            $searchInputContainer.removeClass('do-not-expand'); // Inform the filter input that it can start expanding on scroll if needed.\n        }\n    }\n\n    /**\n     * Infinite scroll callback for when page was fetched from API and rendered.\n     * @param {Object} $page - fetched page html wrapped in jQuery.\n     * @param {String} containerArea - in what part of the container did the page was added: top or bottom.\n     */\n    function onPageRendered($page, containerArea) {\n        (0, _infinite_scroll_bootstrap_fix.infiniteScrollBootstrapFix)($page, containerArea); // Fix for screens where 3 products are fitted in one row.\n    }\n\n    /**\n     * Makes an async search request to the API and precesses the results.\n     */\n    function search() {\n        var filterFields = getSerializedFilterFields(); // Fetch serialized filter form elements.\n        infiniteScrollInstance.destroy(); // Clear up current infinite scroll instance to avoid uneeded data fetching between clearing old and rendering new results.\n        setUrlQueryParams(filterFields); // Update url search params.\n\n        // Start the seach only after old results have finished fading out.\n        $productsContainer.fadeOut(500, function () {\n            $productsContainer.html(''); // Clear old results.\n            blockerInstance.start(); // Start product list blocking.\n\n            // Go to the top of the page and prevent window scroll till the results have finished loading\n            // (prevents infinite scroll bug where next page of previous results where fetched when user scrolled fast enought).\n            window.addEventListener('scroll', noScroll);\n\n            // Cancel already ongoing search request.\n            if (currentSearchRequest && currentSearchRequest.abort) {\n                currentSearchRequest.abort();\n            }\n\n            currentSearchRequest = _jquery2.default.get('').done(function (response) {\n                $productsContainer.html(response); // Render the results.\n                $productsContainer.css('display', 'flex'); // Display initially hidden results to trigger fade in animations.\n                window.removeEventListener('scroll', noScroll); // Allow scrolling again.\n                // Init new infinite scroll instance for newly rendered results.\n                infiniteScrollInstance = (0, _infinite_scroll.InfiniteScroll)({ container: '.product-list-infinite-scroll', pageFetchedCallback: onPageFetched, pageRenderedCallback: onPageRendered });\n            }).always(function () {\n                return blockerInstance.stop(0);\n            });\n        });\n    }\n\n    /**\n     * Updates url search params.\n     * @param {Object[]} filterFields - array of names and values of filter form elements.\n     * @param {String} filterFields[].name - Form field name.\n     * @param {String} filterFields[].value - Form field value.\n     */\n    function setUrlQueryParams(filterFields) {\n        var newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + (filterFields.length > 0 ? '?' : '') + _jquery2.default.param(filterFields);\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/user_products/product_filtering.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/user_products/search_shrink.js":
/*!*************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/user_products/search_shrink.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SearchShrink = SearchShrink;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * PRODUCT FILTER SEARCH INPUT SHRINK\n * ==================================\n * Lowers search input height when scroll position is above set value.\n */\n\n/**\n * Module init.\n * @param {integer} triggerPosition - From which scrollY position should the search input start shrinking.\n */\nfunction SearchShrink() {\n    var triggerPosition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;\n\n    var $filtersSearchInputContainer = (0, _jquery2.default)('#filtersSearchInputContainer');\n    var $filtersSearchContainer = (0, _jquery2.default)(\".grid-search\");\n    var searchShrinked = false;\n    var topDistance = 260;\n\n    $filtersSearchInputContainer.on('click', function () {\n        return expand();\n    }); // Expand the search field when user clicks on it.\n\n    (0, _jquery2.default)(document).on('click', function (e) {\n        // Shrink the search again when clicked anywhere else but input container if it was expanded on search input click.\n        if (!(0, _jquery2.default)(e.target).is($filtersSearchInputContainer) && window.scrollY > triggerPosition) {\n            shrink();\n        }\n    });\n\n    // Check scroll position on scroll and determine if search should be expanded or shrinked.\n    (0, _jquery2.default)(window).on('scroll', function () {\n        if (window.scrollY >= topDistance) {\n            $filtersSearchContainer.removeClass(\"user-sticky-search\");\n            $filtersSearchContainer.addClass(\"user-fixed-search\");\n            (0, _jquery2.default)('#productList').css('padding-top', '100px');\n        } else if (window.scrollY <= 380) {\n            $filtersSearchContainer.addClass(\"user-sticky-search\");\n            $filtersSearchContainer.removeClass(\"user-fixed-search\");\n            (0, _jquery2.default)('#productList').css('padding-top', '0px');\n        } else {\n            $filtersSearchContainer.addClass(\"user-sticky-search\");\n            $filtersSearchContainer.removeClass(\"user-fixed-search\");\n        }\n\n        if (window.scrollY <= triggerPosition) {\n            expand();\n        } else if (!searchShrinked) {\n            // Stop here if search is already shrinked.\n            shrink();\n        }\n    });\n\n    /**\n     * Returns search container to default dimensions.\n     */\n    function expand() {\n        $filtersSearchInputContainer.removeClass('shrink');\n        searchShrinked = false;\n    }\n\n    /**\n     * Makes the search container shorter.\n     */\n    function shrink() {\n        // Do not shrink when filters are opened and search input is focused on.\n        if (!(0, _jquery2.default)('.search-filter-icon').hasClass('filter-focus') && !(0, _jquery2.default)('#filtersSearchInput').is(':focus')) {\n            $filtersSearchInputContainer.addClass('shrink');\n            searchShrinked = true;\n        }\n    }\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/user_products/search_shrink.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/user_products/user_products.js":
/*!*************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/user_products/user_products.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function($) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.UserProducts = UserProducts;\n\nvar _focus_on_product = __webpack_require__(/*! ../shared/focus_on_product/focus_on_product */ \"../../src/mvfx_frontend/public/shared/focus_on_product/focus_on_product.js\");\n\nvar _infinite_scroll = __webpack_require__(/*! ../shared/infinite_scroll/infinite_scroll */ \"../../src/mvfx_frontend/public/shared/infinite_scroll/infinite_scroll.js\");\n\nvar _infinite_scroll_bootstrap_fix = __webpack_require__(/*! ../shared/infinite_scroll_bootstrap_fix/infinite_scroll_bootstrap_fix */ \"../../src/mvfx_frontend/public/shared/infinite_scroll_bootstrap_fix/infinite_scroll_bootstrap_fix.js\");\n\nvar _page_scroll_spy = __webpack_require__(/*! ../shared/page_scroll_spy/page_scroll_spy */ \"../../src/mvfx_frontend/public/shared/page_scroll_spy/page_scroll_spy.js\");\n\nvar _product_download = __webpack_require__(/*! ./product_download */ \"../../src/mvfx_frontend/public/user_products/product_download.js\");\n\nvar _product_filtering = __webpack_require__(/*! ./product_filtering */ \"../../src/mvfx_frontend/public/user_products/product_filtering.js\");\n\nvar _product_grid_video_previews = __webpack_require__(/*! ../shared/product_grid_video_previews/product_grid_video_previews */ \"../../src/mvfx_frontend/public/shared/product_grid_video_previews/product_grid_video_previews.js\");\n\n/**\n * USER PRODUCT LIST\n * =================\n * Lists products bought by user and provides download links to them.\n */\n\n/* istanbul ignore next */\n$(document).ready(function () {\n    UserProducts();\n});\n\nfunction UserProducts() {\n    var $productList = $('#productList');\n\n    if ($productList.length === 0) {\n        return;\n    } // Product list is empty no need to init anything.\n\n    (0, _focus_on_product.focusOnProduct)($productList.offset().top);\n    // InfiniteScroll({ container: '.product-list-infinite-scroll', pageFetchedCallback: onPageFetched, pageRenderedCallback: onPageRendered });\n    (0, _page_scroll_spy.pageScrollSpyInit)($productList.offset().top);\n    (0, _product_download.ProductDownload)();\n    (0, _product_grid_video_previews.ProductGridVideoPreviews)('#productsContainer');\n    (0, _product_filtering.ProductFiltering)(); // Init filters, it also inits infinite scroll.\n    /**\n     * Infinite scroll callback for when page was fetched from API but not yet rendered.\n     * @param {Object} $page - fetched page html wrapped in jQuery.\n     */\n    function onPageFetched($page) {\n        // Do a series of actions when the first page is lazy loaded. \n        if ($page.closest('[data-page-number]').data('pageNumber') === 1) {\n            $('#backToTopBtn').data('pageReload', false); // Inform back to top button that full page reload is not needed.      \n            $('.hide-infinite-scroll-header').removeClass('hide-infinite-scroll-header'); // Show page header.\n        }\n    }\n\n    /**\n     * Infinite scroll callback for when page was fetched from API and rendered.\n     * @param {Object} $page - fetched page html wrapped in jQuery. \n     * @param {String} containerArea - in what part of the container did the page was added: top or bottom.\n     */\n    function onPageRendered($page, containerArea) {\n        (0, _infinite_scroll_bootstrap_fix.infiniteScrollBootstrapFix)($page, containerArea); // Fix for screens where 3 products are fitted in one row.\n    }\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\")))\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/user_products/user_products.js?");

/***/ })

},[["../../src/mvfx_frontend/public/user_products/index.js","runtime","commons"]]]);