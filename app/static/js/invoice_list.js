(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["invoice_list"],{

/***/ "../../src/mvfx_frontend/public/invoice_list/index.js":
/*!****************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/invoice_list/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./invoice_list */ \"../../src/mvfx_frontend/public/invoice_list/invoice_list.js\");\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/invoice_list/index.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/invoice_list/invoice_list.js":
/*!***********************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/invoice_list/invoice_list.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.invoiceListInit = invoiceListInit;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * INVOICE LIST\n * ============\n * Manages displaying multiple order invoices, sends requests to generate new ones and lazy loads previews' images.\n */\n\n/* istanbul ignore next */\n(0, _jquery2.default)(document).ready(function () {\n    invoiceListInit();\n});\n\nvar blockerInstance = void 0;\nvar translations = {};\n\nfunction invoiceListInit() {\n    blockerInstance = (0, _jquery2.default)('body').data('motionvfx.uiBlocker');\n    translations = (0, _jquery2.default)('[data-invoice-translations]').data('invoiceTranslations'); // Translated keywords for HTML rendered via js.\n\n    (0, _jquery2.default)('.order-list .collapse').on('show.bs.collapse', function (e) {\n        return onPreviewRowShow(e.target);\n    }); // Lazy load prev images and mark opened order row as active.\n\n    (0, _jquery2.default)('.order-list .collapse').on('hide.bs.collapse', function (e) {\n        return (0, _jquery2.default)(e.target).closest('tr').prev().removeClass('active');\n    }); // Unmark active order row.\n\n    (0, _jquery2.default)('[data-generate-invoice]').on('click', function (e) {\n        return generateInvoice(e.currentTarget);\n    }); // Start invoice generation process.\n\n    (0, _jquery2.default)('[data-multi-invoices]').on('click', function (e) {\n        return displayMultipleInvoices((0, _jquery2.default)(e.target).data('multiInvoices'));\n    }); // Opens modal for displaying more that one invoice.\n}\n\n///////////////// Private Functions //////////////////\n\n/**\n * Opens up modal with rendered invoices and their download links or statuses.\n * @param {obj} orderData \n * @param {string} orderData.orderName\n * @param {array} orderData.invoices\n */\nfunction displayMultipleInvoices(orderData) {\n    var orderListHtml = '';\n\n    (0, _jquery2.default)('.link-list').html(''); // Clear up invoice links of previously opened order invoice list.\n    (0, _jquery2.default)('#orderTitle').text(orderData.orderName);\n\n    // Render invoices and their info.\n    _jquery2.default.each(orderData.invoices, function (index, invoice) {\n        orderListHtml += ' \\n                <div class=\"row m-0\">                                                   \\n                    <div class=\"col\">' + (index + 1) + '. ' + (invoice.title || translations.not_generated) + '</div>                        \\n            ';\n\n        if (invoice.status === 'ready') {\n            orderListHtml += '\\n                    <div class=\"col-auto download\"><a href=\"' + invoice.url + '\" download></a></div>                        \\n                </div>\\n            ';\n        } else {\n            orderListHtml += '\\n                    <div class=\"col-auto text-uppercase\">' + translations.processing + '</div>                        \\n                </div>\\n            ';\n        }\n    });\n\n    (0, _jquery2.default)('.link-list').html(orderListHtml);\n    (0, _jquery2.default)('#multiInvoicesModal').modal('show');\n}\n\n/**\n * Sends invoice generate request to API.\n * @param {obj} generateInvoiceBtn HTML node of generate invoice trigger btn.\n */\nfunction generateInvoice(generateInvoiceBtn) {\n    var $generateInvoiceBtn = (0, _jquery2.default)(generateInvoiceBtn);\n    var orderId = $generateInvoiceBtn.data('generateInvoice'); // Get the id of the whole order.\n\n    blockerInstance.start();\n\n    _jquery2.default.get('/invoice/request/' + orderId).done(function () {\n        return $generateInvoiceBtn.parent().html('<div class=\"text-uppercase\">' + translations.processing + '</div>');\n    }) // Replace the generate invoice btn trogger and display \"processing\" info label.\n    .fail(function () {\n        return (0, _jquery2.default)('#generateFailModal').modal('show');\n    }) // Display error info in a modal.\n    .always(function () {\n        return blockerInstance.stop(0);\n    });\n}\n\n/**\n * Lazy loades order preview images, closes other opened preview rows and marks order base info row as active.\n * @param {obj} previewRowEl HTML node of the opened order previews row.\n */\nfunction onPreviewRowShow(previewRowEl) {\n    var $previewRowEl = (0, _jquery2.default)(previewRowEl);\n    var $imgEl = $previewRowEl.find('[data-img-lazy-load]');\n\n    // Lazy load prev image for each found prev element in order row.\n    $imgEl.each(function (index, item) {\n        var $item = (0, _jquery2.default)(item);\n\n        $item.attr('src', $item.data('imgLazyLoad'));\n    });\n\n    $previewRowEl.closest('tr').prev().addClass('active'); // Mark order base info row as active.\n\n    // Hide all previously open collapsables, \"show\" class is not yet added to the currently opening collapsable (it waits for animations to finish).\n    (0, _jquery2.default)('.collapse.show').each(function (index, elm) {\n        (0, _jquery2.default)(elm).collapse('hide');\n    });\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/invoice_list/invoice_list.js?");

/***/ })

},[["../../src/mvfx_frontend/public/invoice_list/index.js","runtime","commons"]]]);