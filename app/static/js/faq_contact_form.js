(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["faq_contact_form"],{

/***/ "../../src/mvfx_frontend/public/faq_contact_form/faq_contact_form.js":
/*!*******************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/faq_contact_form/faq_contact_form.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.faqContactFormInit = faqContactFormInit;\n\nvar _jquery = __webpack_require__(/*! jquery */ \"../../../../node_modules/jquery/dist/jquery.js-exposed\");\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _form_utils = __webpack_require__(/*! ../shared/form_utils/form_utils */ \"../../src/mvfx_frontend/public/shared/form_utils/form_utils.js\");\n\nvar _uuid_generator = __webpack_require__(/*! ../../shared/uuid_generator/uuid_generator */ \"../../src/mvfx_frontend/shared/uuid_generator/uuid_generator.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * FAQ CONTACT FORM\n * ================\n * Renders selected files previews, validates files sizes and submits contact form via ajax request.\n */\n\n/* istanbul ignore next */\n(0, _jquery2.default)(document).ready(function () {\n    faqContactFormInit();\n});\n\nvar $contactForm = void 0;\nvar $fileField = void 0;\nvar fileErrors = {};\nvar blockerInstance = void 0;\nvar fileSizeLimit = 7; // Size limit in MB.\n\n// List of files added via file input. \n// Storing them in an array allows for easier file manipulation (ex. adding new files to already selected file list, deleting individual files etc.)\nvar selectedFiles = [];\n\nfunction faqContactFormInit() {\n    $fileField = (0, _jquery2.default)('#fileField');\n\n    $contactForm = (0, _jquery2.default)('#contactForm');\n    blockerInstance = (0, _jquery2.default)('body').data('motionvfx.uiBlocker'); // Init UI blocker.    \n\n    (0, _jquery2.default)('#attachFileBtn').on('click', function () {\n        return $fileField.click();\n    }); // Open browser file manager, by simulating file input button click.\n\n    (0, _jquery2.default)(document).on('click', '[data-file-remove]', function (e) {\n        return fileRemove((0, _jquery2.default)(e.currentTarget).data('fileRemove'));\n    });\n\n    $contactForm.on('submit', function (e) {\n        e.preventDefault();\n        submitContactForm();\n    });\n\n    // Listen for file add events.\n    $fileField.on('change', function (e) {\n\n        _jquery2.default.each(e.target.files, function (index, file) {\n            if (!fileValidation(file)) {\n                return;\n            }\n\n            selectedFiles.push(file);\n            filePreview(file); // Generate image preview for the selected file.            \n        });\n\n        $fileField.val(''); // Clear up the file input field.\n    });\n\n    // Marks file errors as viewed on modal close. This allows for opening further error modals.\n    (0, _jquery2.default)('.modal').on('hidden.bs.modal', function (e) {\n        var modalId = e.target.id;\n\n        if (modalId === 'fileTooLargeModal') {\n            fileErrors.tooLarge = false; // Mark file too large error as viewed.\n        }\n\n        if (modalId === 'tooManyFilesModal') {\n            fileErrors.tooMany = false; // Mark too many files error as viewed.\n        }\n\n        displayFileErrors(); // Open up another modal with file error if any.\n    });\n}\n\n///////////////////// Private Function ////////////////////////////\n\n/**\n * Renders file preview if available, otherwise 'No preview' image will be displayed.\n * @param {object} file File object.\n */\nfunction filePreview(file) {\n    file.motionvfxContactFormId = (0, _uuid_generator.generateUUID)();\n\n    // Limit file previews to certain file types.\n    if (/\\.(jpe?g|png|gif)$/i.test(file.name)) {\n        var reader = new FileReader();\n\n        // Render the file preview img on file load finish.\n        reader.addEventListener('load', function (e) {\n            var previewHtml = '\\n                <div class=\"file-prev\" title=\"' + file.name + '\" style=\"background-image:url(\\'' + e.target.result + '\\')\">\\n                    <a data-file-remove=\"' + file.motionvfxContactFormId + '\" class=\"file-remove cursor-pointer\"></a>\\n                </div>\\n            ';\n\n            (0, _jquery2.default)('#previewContainer').append(previewHtml);\n            (0, _jquery2.default)('.file-prev').tooltip();\n        });\n\n        reader.readAsDataURL(file); // Start reading the file contents.\n    } else {\n        (0, _jquery2.default)('#previewContainer').append('<div class=\"file-prev\" title=\"' + file.name + '\"><a data-file-remove=\"' + file.motionvfxContactFormId + '\" class=\"file-remove cursor-pointer\"></a></div>');\n        (0, _jquery2.default)('.file-prev').tooltip();\n    }\n}\n\n/**\n * Remove selected file by id.\n * @param {string} fileId\n */\nfunction fileRemove(fileId) {\n    selectedFiles = selectedFiles.filter(function (file) {\n        return file.motionvfxContactFormId !== fileId;\n    });\n\n    var $fileWrapper = (0, _jquery2.default)('[data-file-remove=\"' + fileId + '\"]').closest('.file-prev');\n\n    $fileWrapper.tooltip('dispose'); // Tooltip must be removed before removing the prev (it will remain in open position otherwise).\n    $fileWrapper.remove(); // Remove prev from html.\n}\n\n/**\n * File validator.\n * @param {object} file File object.\n * @returns {bool} fileValid\n */\nfunction fileValidation(file) {\n    var fileSize = file.size / 1024 / 1024; // Convert file size to MB.\n    var fileValid = true;\n\n    // Check file size.\n    if (fileSize > fileSizeLimit) {\n        fileErrors.tooLarge = true;\n        fileValid = false;\n    }\n\n    // Check number of added files.\n    if (selectedFiles.length >= 5) {\n        fileErrors.tooMany = true;\n        fileValid = false;\n    }\n\n    if (!fileValid) {\n        displayFileErrors();\n    }\n\n    return fileValid;\n}\n\n/** \n * Makes sure that only one modal with file error is opened at a time.\n */\nfunction displayFileErrors() {\n\n    if (fileErrors.tooLarge && !fileErrors.tooMany) {\n        return (0, _jquery2.default)('#fileTooLargeModal').modal('show');\n    }\n\n    if (fileErrors.tooMany && !fileErrors.tooLarge) {\n        return (0, _jquery2.default)('#tooManyFilesModal').modal('show');\n    }\n}\n\n/**\n * Prepares for data to be send via ajax call, sends request to API and handles server errors.\n */\nfunction submitContactForm() {\n    var formData = new FormData(); // Form data without files field.\n\n    blockerInstance.start();\n\n    // Add only email, csrf token and message fields to form data. Files input is not needed as all selected files are being stored in selectedFiles array.\n    // WARNING! Simply using formData.delete('files') will NOT work on older safari and chrome browsers!\n    formData.append('csrfmiddlewaretoken', (0, _jquery2.default)('[name=\"csrfmiddlewaretoken\"]').val());\n    formData.append('email', (0, _jquery2.default)('[name=\"email\"]').val());\n    formData.append('message', (0, _jquery2.default)('[name=\"message\"]').val());\n\n    _jquery2.default.each(selectedFiles, function (index, file) {\n        return formData.append('files', file);\n    }); // Add selected files to form data.\n\n    _jquery2.default.ajax({\n        type: 'POST',\n        processData: false,\n        contentType: false,\n        data: formData,\n        url: ''\n    }).done(function () {\n        (0, _jquery2.default)('#thankYouModal').modal('show');\n\n        // Revert the form to initial pristine state.\n        (0, _form_utils.clearErrors)($contactForm);\n        $contactForm[0].reset();\n        (0, _jquery2.default)('#previewContainer').html('');\n        selectedFiles = [];\n    }).fail(function (data) {\n        if (data.status == 403) {\n            (0, _form_utils.errorDisplay)($contactForm, data.responseJSON); // Display server errors.                \n        } else {\n            (0, _jquery2.default)('#somethingWentWrongModal').modal('show'); // Show unexpected error occured info modal.\n        }\n    }).always(function () {\n        return blockerInstance.stop();\n    });\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/faq_contact_form/faq_contact_form.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/public/faq_contact_form/index.js":
/*!********************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/public/faq_contact_form/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./faq_contact_form */ \"../../src/mvfx_frontend/public/faq_contact_form/faq_contact_form.js\");\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/public/faq_contact_form/index.js?");

/***/ }),

/***/ "../../src/mvfx_frontend/shared/uuid_generator/uuid_generator.js":
/*!***************************************************************************!*\
  !*** /opt/mvfx/src/mvfx_frontend/shared/uuid_generator/uuid_generator.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.generateUUID = generateUUID;\nfunction generateUUID() {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n}\n\n//# sourceURL=webpack:////opt/mvfx/src/mvfx_frontend/shared/uuid_generator/uuid_generator.js?");

/***/ })

},[["../../src/mvfx_frontend/public/faq_contact_form/index.js","runtime","commons"]]]);